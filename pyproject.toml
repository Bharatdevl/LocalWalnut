[tool.poetry]
name = "walnuteq"
version = "0.1.0"
description = ""
authors = ["Your Name <you@example.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.8"
django = "4.0.0"
celery = "^5.3.4"
twilio = "^8.9.0"
django-redis = "^5.4.0"
django-celery-results = "^2.5.1"
django-celery-beat = "^2.5.0"
pandas = "2.0.0"
gunicorn = "^21.2.0"
psycopg2-binary = "^2.9.9"
python-dotenv = "^1.0.0"
css-html-js-minify = "^2.5.5"
redis = "^5.0.3"



[tool.poetry.group.dev.dependencies]
isort = "^5.12.0"
black = "^23.7.0"
pre-commit = "^3.4.0"
pytest-django = "^4.5.2"
pytest = "^7.4.2"
coverage = "^7.3.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 79
target-version = ["py38","py39","py310"]
extend-exclude = """
/(
  | templates/*
  | media/*
) /
"""

[tool.isort]
py_version = 310
profile = "black"
line_length = 79
multi_line_output = 1
use_parentheses = true
include_trailing_comma = true
skip_glob = [
    "media/",
    "template/"
]

# [tool.mypy]
# ignore_missing_imports = true
# follow_imports = "normal"
# exclude = [".venv","migrations"]

# [tool.pyright]
# python = "3.10"  # Specify your desired Python version
# reportMissingImports = false  # Report missing imports as errors
# venvPath = ".venv"  # Path to your virtual environment, if applicable

[tool.pytest.ini_options]
pythonpath = [
  ".",
]
DJANGO_SETTINGS_MODULE = 'walnuteq.settings'
